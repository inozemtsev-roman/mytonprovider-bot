"""Initial schema

Revision ID: 1e10387ddb25
Revises: 
Create Date: 2025-07-21 23:53:11.023982

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1e10387ddb25'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('providers',
    sa.Column('pubkey', sa.String(length=64), nullable=False),
    sa.Column('address', sa.String(length=64), nullable=False),
    sa.Column('uptime', sa.Float(), nullable=False),
    sa.Column('working_time', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('max_span', sa.Integer(), nullable=False),
    sa.Column('min_span', sa.Integer(), nullable=False),
    sa.Column('price', sa.BigInteger(), nullable=False),
    sa.Column('max_bag_size_bytes', sa.BigInteger(), nullable=False),
    sa.Column('reg_time', sa.Integer(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('is_send_telemetry', sa.Boolean(), nullable=False),
    sa.Column('telemetry_raw', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('pubkey')
    )
    op.create_table('telemetry_history',
    sa.Column('provider_pubkey', sa.String(length=64), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('used_provider_space', sa.Float(), nullable=False),
    sa.Column('total_provider_space', sa.Float(), nullable=False),
    sa.Column('used_disk_space', sa.Float(), nullable=False),
    sa.Column('total_disk_space', sa.Float(), nullable=False),
    sa.Column('bags_count', sa.Integer(), nullable=False),
    sa.Column('traffic_in', sa.Float(), nullable=False),
    sa.Column('traffic_out', sa.Float(), nullable=False),
    sa.Column('ton_balance', sa.Float(), nullable=False),
    sa.Column('ton_earned', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('provider_pubkey', 'date')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('state', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('language_code', sa.String(length=8), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('provider_telemetry',
    sa.Column('provider_pubkey', sa.String(length=64), nullable=False),
    sa.Column('storage_pubkey', sa.String(length=64), nullable=False),
    sa.Column('storage_disk_name', sa.String(length=64), nullable=False),
    sa.Column('storage_used_disk_space', sa.Float(), nullable=False),
    sa.Column('storage_total_disk_space', sa.Float(), nullable=False),
    sa.Column('provider_used_provider_space', sa.Float(), nullable=False),
    sa.Column('provider_total_provider_space', sa.Float(), nullable=False),
    sa.Column('ram_total', sa.Float(), nullable=False),
    sa.Column('ram_usage', sa.Float(), nullable=False),
    sa.Column('ram_usage_percent', sa.Float(), nullable=False),
    sa.Column('cpu_count', sa.Integer(), nullable=False),
    sa.Column('cpu_name', sa.String(), nullable=False),
    sa.Column('cpu_is_virtual', sa.Boolean(), nullable=False),
    sa.Column('cpu_load', sa.JSON(), nullable=False),
    sa.Column('net_load', sa.JSON(), nullable=False),
    sa.Column('net_pps', sa.JSON(), nullable=False),
    sa.Column('net_pings', sa.JSON(), nullable=False),
    sa.Column('net_x_real_ip', sa.String(length=64), nullable=False),
    sa.Column('disk_iops', sa.JSON(), nullable=False),
    sa.Column('disk_load_percent', sa.JSON(), nullable=False),
    sa.Column('system_sysname', sa.String(), nullable=False),
    sa.Column('system_release', sa.String(), nullable=False),
    sa.Column('system_version', sa.String(), nullable=False),
    sa.Column('system_machine', sa.String(), nullable=False),
    sa.Column('raw', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['provider_pubkey'], ['providers.pubkey'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('provider_pubkey')
    )
    op.create_table('user_alert_settings',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('types', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('user_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider_pubkey', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['provider_pubkey'], ['providers.pubkey'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_triggered_alerts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('alert_name', sa.String(length=32), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_triggered_alerts_alert_name'), 'user_triggered_alerts', ['alert_name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_triggered_alerts_alert_name'), table_name='user_triggered_alerts')
    op.drop_table('user_triggered_alerts')
    op.drop_table('user_subscriptions')
    op.drop_table('user_alert_settings')
    op.drop_table('provider_telemetry')
    op.drop_table('users')
    op.drop_table('telemetry_history')
    op.drop_table('providers')
    # ### end Alembic commands ###
